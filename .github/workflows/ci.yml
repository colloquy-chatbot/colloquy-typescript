name: CI Pipeline

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
          retention-days: 1

  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run tests
        run: bun run test
        env:
          OPENAI_API_KEY: dummy-key-for-ci

  check:
    name: Type Check
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run type checking
        run: bun run check

  lint:
    name: Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Run linting
        run: bun run lint

  verify:
    name: Verify
    runs-on: ubuntu-latest
    needs: [build, test, check, lint]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Verify package can be imported
        run: |
          node -e "
            import('./dist/colloquy.js').then(pkg => {
              console.log('✅ Package imports successfully');
              console.log('Available exports:', Object.keys(pkg));
              
              // Verify key exports exist
              const requiredExports = ['OpenAIBot', 'ClaudeBot', 'EchoBot', 'MockBot', 'PromptFunction'];
              const missing = requiredExports.filter(exp => !pkg[exp]);
              if (missing.length > 0) {
                console.error('❌ Missing exports:', missing);
                process.exit(1);
              }
              console.log('✅ All required exports present');
            }).catch(err => {
              console.error('❌ Package import failed:', err);
              process.exit(1);
            });
          "

  publish:
    name: Publish to NPM
    runs-on: ubuntu-latest
    needs: [verify]
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Install dependencies
        run: bun install

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: dist
          path: dist/

      - name: Setup npm authentication
        run: |
          echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_AUTH_TOKEN }}" > ~/.npmrc

      - name: Publish package
        run: |
          # Check if we're authenticated
          npm whoami
          
          # Publish the package (skip scripts since we already verified everything)
          npm publish --access public --ignore-scripts
